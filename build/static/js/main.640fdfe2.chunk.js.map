{"version":3,"sources":["components/SideNavigation.tsx","components/Header.tsx","components/routes/ThemeList.tsx","components/routes/TopicList.tsx","components/TopicCard.tsx","components/routes/Topic.tsx","components/routes/Home.tsx","App.tsx","history.ts","redux/reducer.ts","redux/store.ts","theme.ts","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","list","width","active","border","SideNavigation","isOpen","onClose","classes","Drawer","open","className","List","ListItem","button","component","NavLink","to","exact","onClick","activeClassName","ListItemIcon","ListItemText","primary","Routes","themeList","Divider","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","Header","React","useState","isOpenDrawer","setOpenDrawer","anchorEl","setAnchorEl","Boolean","handleClose","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","aria-controls","aria-haspopup","event","currentTarget","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","ThemeList","TopicList","ListItemAvatar","Avatar","secondary","card","marginTop","marginBottom","bullet","display","margin","transform","fontSize","pos","SimpleCard","bull","Card","CardContent","gutterBottom","CardActions","Button","size","startIcon","endIcon","Topic","Home","home","topicList","topic","App","Container","path","createBrowserHistory","combineReducers","router","connectRouter","history","enhancer","composeWithDevTools","applyMiddleware","thunk","routerMiddleware","store","createStore","reducer","createMuiTheme","palette","main","error","red","A400","background","default","window","location","hostname","match","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.640fdfe2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Routes } from '../App';\r\n\r\ninterface OwnProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  active: {\r\n    border: '1px solid red',\r\n  },\r\n});\r\n\r\nconst SideNavigation: React.FC<OwnProps> = ({ isOpen, onClose }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Drawer open={isOpen} onClose={onClose}>\r\n        <div className={classes.list}>\r\n          <List>\r\n            <ListItem\r\n              button\r\n              component={NavLink}\r\n              to=\"/\"\r\n              exact\r\n              onClick={onClose}\r\n              activeClassName={classes.active}\r\n            >\r\n              <ListItemIcon>\r\n                <InboxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={'Home'} />\r\n            </ListItem>\r\n            <ListItem\r\n              button\r\n              component={NavLink}\r\n              to={Routes.themeList}\r\n              exact\r\n              onClick={onClose}\r\n              activeClassName={classes.active}\r\n            >\r\n              <ListItemIcon>\r\n                <InboxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={'ThemeList'} />\r\n            </ListItem>\r\n            <ListItem\r\n              button\r\n              component={NavLink}\r\n              to=\"/topic-list\"\r\n              exact\r\n              onClick={onClose}\r\n              activeClassName={classes.active}\r\n            >\r\n              <ListItemIcon>\r\n                <InboxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={'TopicList'} />\r\n            </ListItem>\r\n            <ListItem\r\n              button\r\n              component={NavLink}\r\n              to=\"/topic\"\r\n              exact\r\n              onClick={onClose}\r\n              activeClassName={classes.active}\r\n            >\r\n              <ListItemIcon>\r\n                <InboxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary={'Topic'} />\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n        </div>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideNavigation;\r\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport SideNavigation from './SideNavigation';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nconst Header = () => {\n  const classes = useStyles();\n  const [isOpenDrawer, setOpenDrawer] = React.useState<boolean>(false);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <SideNavigation\n        isOpen={isOpenDrawer}\n        onClose={() => setOpenDrawer(false)}\n      />\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={() => setOpenDrawer(true)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Parallel Topics\n          </Typography>\n          <div>\n            <IconButton\n              aria-label=\"account of current user\"\n              aria-controls=\"menu-appbar\"\n              aria-haspopup=\"true\"\n              onClick={handleMenu}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n            <Menu\n              id=\"menu-appbar\"\n              anchorEl={anchorEl}\n              anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              keepMounted\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n              }}\n              open={open}\n              onClose={handleClose}\n            >\n              <MenuItem onClick={handleClose}>Profile</MenuItem>\n              <MenuItem onClick={handleClose}>My account</MenuItem>\n            </Menu>\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n","import * as React from 'react';\n\nconst ThemeList = () => <h1>Theme List</h1>;\n\nexport default ThemeList;\n","import React from 'react';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport DescriptionIcon from '@material-ui/icons/Description';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n  }),\n);\n\nconst TopicList = () => {\n  const classes = useStyles();\n\n  return (\n    <List className={classes.root}>\n      <ListItem button>\n        <ListItemAvatar>\n          <Avatar>\n            <DescriptionIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary=\"Topic\" secondary=\"Description\" />\n      </ListItem>\n      <ListItem button>\n        <ListItemAvatar>\n          <Avatar>\n            <DescriptionIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary=\"Topic\" secondary=\"Description\" />\n      </ListItem>\n      <ListItem button>\n        <ListItemAvatar>\n          <Avatar>\n            <DescriptionIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary=\"Topic\" secondary=\"Description\" />\n      </ListItem>\n    </List>\n  );\n};\n\nexport default TopicList;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  card: {\n    marginTop: 10,\n    marginBottom: 10,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function SimpleCard() {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n          Word of the Day\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          be\n          {bull}\n          nev\n          {bull}o{bull}\n          lent\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          adjective\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          well meaning and kindly.\n          <br />\n          {'\"a benevolent smile\"'}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"primary\"\n          startIcon={<ChevronLeft />}\n        >\n          Prev\n        </Button>\n        <Button size=\"small\" variant=\"contained\" color=\"primary\">\n          Learn More\n        </Button>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          color=\"primary\"\n          endIcon={<ChevronRight />}\n        >\n          Next\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import * as React from 'react';\nimport TopicCard from '../TopicCard';\n\nconst Topic = () => (\n  <div>\n    <TopicCard />\n    <TopicCard />\n  </div>\n);\n\nexport default Topic;\n","import * as React from 'react';\n\nconst Home = () => <h1>Home</h1>;\n\nexport default Home;\n","import * as React from 'react';\r\nimport Header from './components/Header';\r\n// import Footer from './components/Footer';\r\nimport ThemeList from './components/routes/ThemeList';\r\nimport TopicList from './components/routes/TopicList';\r\nimport Topic from './components/routes/Topic';\r\nimport Home from './components/routes/Home';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nexport const Routes: { [key: string]: string } = {\r\n  home: '/',\r\n  themeList: '/theme-list',\r\n  topicList: '/topic-list',\r\n  topic: '/topic',\r\n};\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Header />\r\n    <Container>\r\n      <Switch>\r\n        <Route exact path={Routes.home} component={Home} />\r\n        <Route path={Routes.themeList} component={ThemeList} />\r\n        <Route path={Routes.topicList} component={TopicList} />\r\n        <Route path={Routes.topic} component={Topic} />\r\n      </Switch>\r\n    </Container>\r\n    {/* <Footer /> */}\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();\r\n","import { combineReducers } from 'redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport history from '../history';\r\n\r\nexport default combineReducers({\r\n  router: connectRouter(history)\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { routerMiddleware } from \"connected-react-router\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport reducer from \"./reducer\";\r\nimport history from \"../history\";\r\n\r\nconst enhancer = composeWithDevTools(\r\n  applyMiddleware(thunk, routerMiddleware(history))\r\n);\r\n\r\nconst store = createStore(reducer, enhancer);\r\n\r\nexport default store;\r\n","import { red } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\n// A custom theme for this app\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#556cd6'\r\n    },\r\n    secondary: {\r\n      main: '#19857b'\r\n    },\r\n    error: {\r\n      main: red.A400\r\n    },\r\n    background: {\r\n      default: '#fff'\r\n    }\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport theme from \"./theme\";\nimport history from \"./history\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <CssBaseline />\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <App />\n      </ConnectedRouter>\n    </Provider>\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}